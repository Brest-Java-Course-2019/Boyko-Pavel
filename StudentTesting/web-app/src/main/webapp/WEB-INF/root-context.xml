<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!-- Use spring servlet for all requests, including static resources -->
    <mvc:default-servlet-handler/>

    <mvc:annotation-driven/>

    <mvc:resources mapping="/resources/**" location="/resources/"/>


<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
<!--        <property name="driverClassName" value="org.h2.Driver"/>-->
<!--        <property name="url" value="jdbc:h2:mem:test_db;MODE=MYSQL;DB_CLOSE_DELAY=-1"/>-->
<!--        <property name="username" value="sa"/>-->
<!--        <property name="password" value=""/>-->
<!--    </bean>-->

<!--    <jdbc:initialize-database>-->
<!--        <jdbc:script location="classpath:create_tables.sql"/>-->
<!--        <jdbc:script location="classpath:data_script.sql"/>-->
<!--    </jdbc:initialize-database>-->

<!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--    </bean>-->

<!--    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">-->
<!--        <constructor-arg name="dataSource" ref="dataSource"/>-->
<!--    </bean>-->
<!--    <context:property-placeholder location="classpath*:sql.properties"/>-->
<!--    <context:component-scan base-package="com.epam.brest.project.dao"/>-->
<!--    <context:component-scan base-package="com.epam.brest.project.service"/>-->
<!--    <context:component-scan base-package="com.epam.brest.project.web_app.EditTestController"/>-->
<!--    <context:component-scan base-package="com.epam.brest.project.web_app.HomeController"/>-->
<!--    <context:component-scan base-package="com.epam.brest.project.web_app.StartTestController"/>-->
<!--    <context:component-scan base-package="com.epam.brest.project.web_app.StudentController"/>-->
<!--    <context:component-scan base-package="com.epam.brest.project.web_app.TeacherController"/>-->



    <!--Start WEB RESTful application application-->

    <context:component-scan base-package="com.epam.brest.project.web_app"/>

    <bean id="studentAnswerConsumer" class="com.epam.brest.project.web_app.consumers.StudentAnswerConsumer">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.studentAnswer}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>


    <bean id="studentConsumer" class="com.epam.brest.project.web_app.consumers.StudentConsumer">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.student}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>


    <bean id="subjectConsumer" class="com.epam.brest.project.web_app.consumers.SubjectConsumer">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.subject}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>


    <bean id="teacherConsumer" class="com.epam.brest.project.web_app.consumers.TeacherConsumer">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.teacher}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>


    <bean id="testDtoConsumer" class="com.epam.brest.project.web_app.consumers.TestDtoConsumer">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.teacher}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <context:property-placeholder location="classpath:application.properties"/>

    <!-- Thymeleaf Template Resolver -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML" />
        <!-- Template cache is true by default. Set to false if you want             -->
        <!-- templates to be automatically updated when modified.                    -->
        <property name="cacheable" value="false" />
    </bean>

    <!-- Thymeleaf Template Engine (Spring5-specific version) -->
    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolvers">
            <set>
                <ref bean="templateResolver" />
            </set>
        </property>
    </bean>

    <!-- Thymeleaf View Resolver - implementation of Spring's ViewResolver interface -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8" />
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:basename="/WEB-INF/messages">
    </bean>


    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- view name resolved using bean of type InternalResourceViewResolver (declared in mvc-view-config.xml) -->
        <property name="defaultErrorView" value="exception"/>
        <!-- results into 'WEB-INF/jsp/exception.jsp' -->
        <property name="warnLogCategory" value="warn"/>
        <!-- needed otherwise exceptions won't be logged anywhere -->
    </bean>

</beans>