
subject.selectAllSubject = SELECT subject_id, subject_name FROM subject
subject.selectBySubjectId = SELECT subject_id, subject_name FROM subject WHERE subject_id = :subject_id
subject.insertSubject = INSERT into subject (subject_name) VALUES (:subject_name)
subject.updateSubject = UPDATE subject SET subject_name = :subject_name where subject_id = :subject_id
subject.deleteSubject = DELETE FROM subject WHERE subject_id = :subject_id

test.selectAllTest = SELECT test_id, name, teacher_id, subject_id FROM test WHERE deleted = 0
test.selectTestByID = SELECT test_id, name, teacher_id, subject_id FROM test WHERE test_id = :test_id AND deleted = 0
test.insertTest = INSERT INTO test (name, teacher_id, subject_id) VALUES (:name, :teacher_id, :subject_id)
#test.existTest = SELECT COUNT(q.question_id) FROM question q WHERE q.question_id = :question_id AND q.deleted = 0
test.updateTest = UPDATE test SET name = :name, teacher_id = :teacher_id, subject_id = :subject_id WHERE test_id = :test_id AND deleted = 0
test.deleteTest = UPDATE test SET deleted = 1 WHERE test_id = :test_id

test.selectTestDTOByID = SELECT t.test_id, t.name, t.teacher_id, s.subject_name FROM test t \
  JOIN subject s ON (s.subject_id =  t.subject_id AND t.deleted = 0 AND t.test_id = :test_id)


questionItem.selectAllQuestionItem = SELECT question_item_id, description, question_id, answer FROM question_item WHERE deleted = 0
questionItem.selectByQuestionItem = SELECT question_item_id, description, question_id, answer FROM question_item WHERE question_item_id = :question_item_id AND deleted = 0
questionItem.selectAllQuestionItemByQuestionId = SELECT qi.question_item_id, qi.description, qi.question_id, qi.answer FROM question_item qi \
JOIN question q ON (q.test_id = :test_id AND q.question_id = qi.question_id AND qi.deleted =0 and q.deleted = 0)
#  JOIN question_id = :question_id AND deleted = 0
#  WHERE question_id = :question_id AND deleted = 0

questionItem.insertQuestionItem = INSERT into question_item (description, question_id, answer) VALUES (:description, :question_id, :answer)
questionItem.existQuestionById = SELECT COUNT(q.question_id) FROM question q WHERE q.question_id = :question_id AND q.deleted = 0
questionItem.updateQuestionItem = UPDATE question_item SET description = :description, answer=:answer WHERE question_item_id = :question_item_id AND deleted = 0
questionItem.deleteQuestionItem = UPDATE question_item SET deleted = 1 WHERE question_item_id = :question_item_id


question.selectAllQuestion = SELECT q.question_id, q.question, q.test_id FROM question q WHERE deleted = 0
question.selectQuestionById = SELECT q.question_id, q.question, q.test_id FROM question q WHERE question_id = :question_id AND deleted = 0
question.selectAllQuestionByTestId = SELECT question_id, question, test_id FROM question WHERE test_id = :test_id AND deleted = 0
question.insertQuestion = INSERT INTO question (question, test_id) VALUES (:question, :test_id)
question.existTestById = SELECT COUNT(test_id) FROM test WHERE test_id = :test_id AND deleted = 0
question.updateQuestion = UPDATE question SET question_id = :question_id, question=:question WHERE question_id = :question_id
question.deleteQuestion = UPDATE question SET deleted = 1 WHERE question_id = :question_id

studentTestDTO.findAllDTO = SELECT s.subject_name, t.test_id, t.name, t.created_at, count(q.question_id) AS countQuestions FROM subject s \
JOIN test t ON (t.subject_id =  s.subject_id and t.deleted = 0) \
JOIN question q ON (q.test_id =  t.test_id and  q.deleted = 0) \
GROUP BY t.test_id, s.subject_name, t.name, t.created_at

#nal String CHECK_COUNT_NAME = "select count(departmentId) from department where lower(departmentName) = lower(:departmentName)";


#student.selectAllStudent = SELECT student_id, student_name, student_surname FROM student
#student.selectBystudent_id = SELECT student_id, student_name, student_surname FROM student WHERE student_id = :student_id
#student.insertStudent = INSERT INTO student (student_name, student_surname) VALUES (:student_surname, :student_surname)
#student.updateStudent = UPDATE student SET student_name = :student_name, student_surname = :student_surname \
#  WHERE student_id = :student_id
#student.deleteStudent = DELETE FROM student WHERE student_id = :student_id
#
#public static final String SELECT_ALL_STUBS = "SELECT d.departmentId, d.departmentName, IFNULL (avg(e.salary),0) AS AvgSalary" +
#" FROM department d " +
#" LEFT JOIN employee e ON (d.departmentId = e.departmentId)" +
#" GROUP BY d.departmentId, d.departmentName";
#newTesting.selectAllNewTestDTO = \
# SELECT t.tests_id, s.name, t.test_name, q.questionName, i.question_item, a.answer \
# FROM right_answer a \
# INNER JOIN question_item i ON (a.question_item_id =  i.question_item_id) \
# INNER JOIN questionName q ON (a.question_id =  q.question_id) \
# INNER JOIN subject s ON (s.subject_id =  q.subject_id) \
# INNER JOIN test t ON (s.subject_id  =  t.subject_id)




#test.selectAllTest = SELECT t.test_id, t.name, t.teacher_id, s.subject_name FROM test t \
#  JOIN subject s ON (s.subject_id =  t.subject_id and t.deleted = 0)
#test.selectByTest = SELECT t.test_id, t.name, t.teacher_id, s.subject_name FROM test t \
#  JOIN subject s ON (s.subject_id =  t.subject_id AND t.deleted = 0 AND t.test_id = :test_id)